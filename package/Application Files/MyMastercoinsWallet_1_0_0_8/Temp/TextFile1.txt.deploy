            If False Then

                Dim FullDS As String = 20.ToString("x8") + _
                     CoinType.ToString("x8") + _
                     SatAmount.ToString("x16") + _
                     SatBTCAmount.ToString("x16") + _
                     6.ToString("x2") + _
                     SatTransactionFee.ToString("x16") + _
                     0.ToString("x66")
                Dim dataString1 As String = 1.ToString("x2") + FullDS.Substring(0, 59)
                Dim dataString2 As String = 2.ToString("x2") + FullDS.Substring(59, 59)
                'Note it should be 66 per packet 4 will be used in send multisig so total must be 62
                Dim ReferenceAddress As String = Trim(cboAddress.Text)
                Dim hashstring1 As String = (New Bitcoin).GetHash(ReferenceAddress)
                Dim Packet1 As String = (New Bitcoin).ObsXor(dataString1, hashstring1)
                hashstring1 = (New Bitcoin).GetHash(hashstring1)
                Dim Packet2 As String = (New Bitcoin).ObsXor(dataString2, hashstring1)

                '            sendmultisig(txtSendToBTCA.Text, Packet1, Packet2)

            End If


                'Show be 62 char per packet 
                If False Then
                    Dim dataString As String = "01" + _
                        SendType.ToString("x8") + _
                        CoinType.ToString("x8") + _
                        SatAmount.ToString("x16") _
                        + 0.ToString("x28")

                    Dim Packet As String = (New Bitcoin).MSCData(dataString, cboAddress.Text)
                End If

Sub sendmultisig(ByVal RecipientAddress As String, ByVal Packet1 As String, Optional ByVal Packet2 As String = "")

        Dim bitcoin_con As mlib.bitcoinrpcconnection = (New mlib.bitcoinrpcconnection)
        bitcoin_con.bitcoinrpcserver = txtRPCServer.Text
        bitcoin_con.bitcoinrpcport = CInt(txtRPCPort.Text)
        bitcoin_con.bitcoinrpcuser = txtRPCUser.Text
        bitcoin_con.bitcoinrpcpassword = txtRPCPassword.Text

        Dim FinalPacket1 As String = ""
        Dim rbyte As String = (New mlib).getrandombyte()
        FinalPacket1 = "02" + Packet1 + rbyte

        Dim FinalPacket2 As String = ""
        If Not Packet2 = "" Then
            rbyte = (New mlib).getrandombyte()
            FinalPacket2 = "02" + Packet2 + rbyte
        End If

        '        Dim hashString1 As String = (New Bitcoin).GetHash(cboAddress.Text)
        '       Dim DataString1 = (New Bitcoin).ObsXor(Packet1, hashString1)


        Dim Rawtx As String = (New mlib).encodetx(bitcoin_con, cboAddress.Text, RecipientAddress, FinalPacket1 + FinalPacket2)
        '            txtViewer.AppendText(vbCrLf & "Raw transaction hex:" & vbCrLf & rawtx & vbCrLf & "Raw transaction decode:" & vbCrLf & (New mlib).rpccall(bitcoin_con, "decoderawtransaction", rawtx))
        Call (New mlib).rpccall(bitcoin_con, "walletlock")
        Dim walletpass As String = InputBox("Please enter your bitcoin wallet password to send the transaction", "Bitcoin Wallet Pasword", "")
        Dim dd As String = (New mlib).rpccall(bitcoin_con, "walletpassphrase", walletpass + "  15")
        Dim json As String = (New mlib).rpccall(bitcoin_con, "signrawtransaction", Rawtx)
        If json <> "" Then
            If InStr(json, "True") Then
                Dim signedtxn As String = json
                json = (New mlib).rpccall(bitcoin_con, "sendrawtransaction", signedtxn)
                If json <> "" Then
                    txtMessage.Text = "Transaction sent, ID: " & json
                Else
                    txtMessage.Text = "Error in sending the transaction."
                End If
            Else
                txtMessage.Text = "Signing unsuccessful."
            End If
        Else
            txtMessage.Text = "Password is invalid."
        End If
    End Sub
